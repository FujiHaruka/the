// Code generated by coz. DO NOT EDIT.
/**
 * Node types
 * @memberOf module:@the-/ast
 * @namespace NodeTypes
 */
'use strict'

module.exports =
  /** @lends module:@the-/ast.NodeTypes */
  {
    ArrayExpression: 'ArrayExpression',
    AssignmentExpression: 'AssignmentExpression',
    BinaryExpression: 'BinaryExpression',
    InterpreterDirective: 'InterpreterDirective',
    Directive: 'Directive',
    DirectiveLiteral: 'DirectiveLiteral',
    BlockStatement: 'BlockStatement',
    BreakStatement: 'BreakStatement',
    CallExpression: 'CallExpression',
    CatchClause: 'CatchClause',
    ConditionalExpression: 'ConditionalExpression',
    ContinueStatement: 'ContinueStatement',
    DebuggerStatement: 'DebuggerStatement',
    DoWhileStatement: 'DoWhileStatement',
    EmptyStatement: 'EmptyStatement',
    ExpressionStatement: 'ExpressionStatement',
    File: 'File',
    ForInStatement: 'ForInStatement',
    ForStatement: 'ForStatement',
    FunctionDeclaration: 'FunctionDeclaration',
    FunctionExpression: 'FunctionExpression',
    Identifier: 'Identifier',
    IfStatement: 'IfStatement',
    LabeledStatement: 'LabeledStatement',
    StringLiteral: 'StringLiteral',
    NumericLiteral: 'NumericLiteral',
    NullLiteral: 'NullLiteral',
    BooleanLiteral: 'BooleanLiteral',
    RegExpLiteral: 'RegExpLiteral',
    LogicalExpression: 'LogicalExpression',
    MemberExpression: 'MemberExpression',
    NewExpression: 'NewExpression',
    Program: 'Program',
    ObjectExpression: 'ObjectExpression',
    ObjectMethod: 'ObjectMethod',
    ObjectProperty: 'ObjectProperty',
    RestElement: 'RestElement',
    ReturnStatement: 'ReturnStatement',
    SequenceExpression: 'SequenceExpression',
    ParenthesizedExpression: 'ParenthesizedExpression',
    SwitchCase: 'SwitchCase',
    SwitchStatement: 'SwitchStatement',
    ThisExpression: 'ThisExpression',
    ThrowStatement: 'ThrowStatement',
    TryStatement: 'TryStatement',
    UnaryExpression: 'UnaryExpression',
    UpdateExpression: 'UpdateExpression',
    VariableDeclaration: 'VariableDeclaration',
    VariableDeclarator: 'VariableDeclarator',
    WhileStatement: 'WhileStatement',
    WithStatement: 'WithStatement',
    AssignmentPattern: 'AssignmentPattern',
    ArrayPattern: 'ArrayPattern',
    ArrowFunctionExpression: 'ArrowFunctionExpression',
    ClassBody: 'ClassBody',
    ClassDeclaration: 'ClassDeclaration',
    ClassExpression: 'ClassExpression',
    ExportAllDeclaration: 'ExportAllDeclaration',
    ExportDefaultDeclaration: 'ExportDefaultDeclaration',
    ExportNamedDeclaration: 'ExportNamedDeclaration',
    ExportSpecifier: 'ExportSpecifier',
    ForOfStatement: 'ForOfStatement',
    ImportDeclaration: 'ImportDeclaration',
    ImportDefaultSpecifier: 'ImportDefaultSpecifier',
    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
    ImportSpecifier: 'ImportSpecifier',
    MetaProperty: 'MetaProperty',
    ClassMethod: 'ClassMethod',
    ObjectPattern: 'ObjectPattern',
    SpreadElement: 'SpreadElement',
    Super: 'Super',
    TaggedTemplateExpression: 'TaggedTemplateExpression',
    TemplateElement: 'TemplateElement',
    TemplateLiteral: 'TemplateLiteral',
    YieldExpression: 'YieldExpression',
    AnyTypeAnnotation: 'AnyTypeAnnotation',
    ArrayTypeAnnotation: 'ArrayTypeAnnotation',
    BooleanTypeAnnotation: 'BooleanTypeAnnotation',
    BooleanLiteralTypeAnnotation: 'BooleanLiteralTypeAnnotation',
    NullLiteralTypeAnnotation: 'NullLiteralTypeAnnotation',
    ClassImplements: 'ClassImplements',
    DeclareClass: 'DeclareClass',
    DeclareFunction: 'DeclareFunction',
    DeclareInterface: 'DeclareInterface',
    DeclareModule: 'DeclareModule',
    DeclareModuleExports: 'DeclareModuleExports',
    DeclareTypeAlias: 'DeclareTypeAlias',
    DeclareOpaqueType: 'DeclareOpaqueType',
    DeclareVariable: 'DeclareVariable',
    DeclareExportDeclaration: 'DeclareExportDeclaration',
    DeclareExportAllDeclaration: 'DeclareExportAllDeclaration',
    DeclaredPredicate: 'DeclaredPredicate',
    ExistsTypeAnnotation: 'ExistsTypeAnnotation',
    FunctionTypeAnnotation: 'FunctionTypeAnnotation',
    FunctionTypeParam: 'FunctionTypeParam',
    GenericTypeAnnotation: 'GenericTypeAnnotation',
    InferredPredicate: 'InferredPredicate',
    InterfaceExtends: 'InterfaceExtends',
    InterfaceDeclaration: 'InterfaceDeclaration',
    InterfaceTypeAnnotation: 'InterfaceTypeAnnotation',
    IntersectionTypeAnnotation: 'IntersectionTypeAnnotation',
    MixedTypeAnnotation: 'MixedTypeAnnotation',
    EmptyTypeAnnotation: 'EmptyTypeAnnotation',
    NullableTypeAnnotation: 'NullableTypeAnnotation',
    NumberLiteralTypeAnnotation: 'NumberLiteralTypeAnnotation',
    NumberTypeAnnotation: 'NumberTypeAnnotation',
    ObjectTypeAnnotation: 'ObjectTypeAnnotation',
    ObjectTypeInternalSlot: 'ObjectTypeInternalSlot',
    ObjectTypeCallProperty: 'ObjectTypeCallProperty',
    ObjectTypeIndexer: 'ObjectTypeIndexer',
    ObjectTypeProperty: 'ObjectTypeProperty',
    ObjectTypeSpreadProperty: 'ObjectTypeSpreadProperty',
    OpaqueType: 'OpaqueType',
    QualifiedTypeIdentifier: 'QualifiedTypeIdentifier',
    StringLiteralTypeAnnotation: 'StringLiteralTypeAnnotation',
    StringTypeAnnotation: 'StringTypeAnnotation',
    ThisTypeAnnotation: 'ThisTypeAnnotation',
    TupleTypeAnnotation: 'TupleTypeAnnotation',
    TypeofTypeAnnotation: 'TypeofTypeAnnotation',
    TypeAlias: 'TypeAlias',
    TypeAnnotation: 'TypeAnnotation',
    TypeCastExpression: 'TypeCastExpression',
    TypeParameter: 'TypeParameter',
    TypeParameterDeclaration: 'TypeParameterDeclaration',
    TypeParameterInstantiation: 'TypeParameterInstantiation',
    UnionTypeAnnotation: 'UnionTypeAnnotation',
    Variance: 'Variance',
    VoidTypeAnnotation: 'VoidTypeAnnotation',
    JSXAttribute: 'JSXAttribute',
    JSXClosingElement: 'JSXClosingElement',
    JSXElement: 'JSXElement',
    JSXEmptyExpression: 'JSXEmptyExpression',
    JSXExpressionContainer: 'JSXExpressionContainer',
    JSXSpreadChild: 'JSXSpreadChild',
    JSXIdentifier: 'JSXIdentifier',
    JSXMemberExpression: 'JSXMemberExpression',
    JSXNamespacedName: 'JSXNamespacedName',
    JSXOpeningElement: 'JSXOpeningElement',
    JSXSpreadAttribute: 'JSXSpreadAttribute',
    JSXText: 'JSXText',
    JSXFragment: 'JSXFragment',
    JSXOpeningFragment: 'JSXOpeningFragment',
    JSXClosingFragment: 'JSXClosingFragment',
    Noop: 'Noop',
    Placeholder: 'Placeholder',
    ArgumentPlaceholder: 'ArgumentPlaceholder',
    AwaitExpression: 'AwaitExpression',
    BindExpression: 'BindExpression',
    ClassProperty: 'ClassProperty',
    OptionalMemberExpression: 'OptionalMemberExpression',
    PipelineTopicExpression: 'PipelineTopicExpression',
    PipelineBareFunction: 'PipelineBareFunction',
    PipelinePrimaryTopicReference: 'PipelinePrimaryTopicReference',
    OptionalCallExpression: 'OptionalCallExpression',
    ClassPrivateProperty: 'ClassPrivateProperty',
    ClassPrivateMethod: 'ClassPrivateMethod',
    Import: 'Import',
    Decorator: 'Decorator',
    DoExpression: 'DoExpression',
    ExportDefaultSpecifier: 'ExportDefaultSpecifier',
    ExportNamespaceSpecifier: 'ExportNamespaceSpecifier',
    PrivateName: 'PrivateName',
    BigIntLiteral: 'BigIntLiteral',
    TSParameterProperty: 'TSParameterProperty',
    TSDeclareFunction: 'TSDeclareFunction',
    TSDeclareMethod: 'TSDeclareMethod',
    TSQualifiedName: 'TSQualifiedName',
    TSCallSignatureDeclaration: 'TSCallSignatureDeclaration',
    TSConstructSignatureDeclaration: 'TSConstructSignatureDeclaration',
    TSPropertySignature: 'TSPropertySignature',
    TSMethodSignature: 'TSMethodSignature',
    TSIndexSignature: 'TSIndexSignature',
    TSAnyKeyword: 'TSAnyKeyword',
    TSUnknownKeyword: 'TSUnknownKeyword',
    TSNumberKeyword: 'TSNumberKeyword',
    TSObjectKeyword: 'TSObjectKeyword',
    TSBooleanKeyword: 'TSBooleanKeyword',
    TSStringKeyword: 'TSStringKeyword',
    TSSymbolKeyword: 'TSSymbolKeyword',
    TSVoidKeyword: 'TSVoidKeyword',
    TSUndefinedKeyword: 'TSUndefinedKeyword',
    TSNullKeyword: 'TSNullKeyword',
    TSNeverKeyword: 'TSNeverKeyword',
    TSThisType: 'TSThisType',
    TSFunctionType: 'TSFunctionType',
    TSConstructorType: 'TSConstructorType',
    TSTypeReference: 'TSTypeReference',
    TSTypePredicate: 'TSTypePredicate',
    TSTypeQuery: 'TSTypeQuery',
    TSTypeLiteral: 'TSTypeLiteral',
    TSArrayType: 'TSArrayType',
    TSTupleType: 'TSTupleType',
    TSOptionalType: 'TSOptionalType',
    TSRestType: 'TSRestType',
    TSUnionType: 'TSUnionType',
    TSIntersectionType: 'TSIntersectionType',
    TSConditionalType: 'TSConditionalType',
    TSInferType: 'TSInferType',
    TSParenthesizedType: 'TSParenthesizedType',
    TSTypeOperator: 'TSTypeOperator',
    TSIndexedAccessType: 'TSIndexedAccessType',
    TSMappedType: 'TSMappedType',
    TSLiteralType: 'TSLiteralType',
    TSExpressionWithTypeArguments: 'TSExpressionWithTypeArguments',
    TSInterfaceDeclaration: 'TSInterfaceDeclaration',
    TSInterfaceBody: 'TSInterfaceBody',
    TSTypeAliasDeclaration: 'TSTypeAliasDeclaration',
    TSAsExpression: 'TSAsExpression',
    TSTypeAssertion: 'TSTypeAssertion',
    TSEnumDeclaration: 'TSEnumDeclaration',
    TSEnumMember: 'TSEnumMember',
    TSModuleDeclaration: 'TSModuleDeclaration',
    TSModuleBlock: 'TSModuleBlock',
    TSImportType: 'TSImportType',
    TSImportEqualsDeclaration: 'TSImportEqualsDeclaration',
    TSExternalModuleReference: 'TSExternalModuleReference',
    TSNonNullExpression: 'TSNonNullExpression',
    TSExportAssignment: 'TSExportAssignment',
    TSNamespaceExportDeclaration: 'TSNamespaceExportDeclaration',
    TSTypeAnnotation: 'TSTypeAnnotation',
    TSTypeParameterInstantiation: 'TSTypeParameterInstantiation',
    TSTypeParameterDeclaration: 'TSTypeParameterDeclaration',
    TSTypeParameter: 'TSTypeParameter',
  }

Object.freeze(module.exports)
