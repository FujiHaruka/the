[
  {
    "description": "AST (abstract syntax tree) parser",
    "id": "module:@the-/ast",
    "kind": "module",
    "license": "MIT",
    "longname": "module:@the-/ast",
    "meta": {
      "filename": "index.js",
      "lineno": 2,
      "path": "/Users/okuni/Projects/the/packages/ast/lib"
    },
    "name": "@the-/ast",
    "order": 3,
    "typicalname": "ast",
    "version": "15.4.2"
  },
  {
    "description": "Analyze node",
    "id": "module:@the-/ast.analyzer",
    "kind": "namespace",
    "longname": "module:@the-/ast.analyzer",
    "memberof": "module:@the-/ast",
    "meta": {
      "filename": "analyser.js",
      "lineno": 1,
      "path": "/Users/okuni/Projects/the/packages/ast/lib"
    },
    "name": "analyzer",
    "order": 0,
    "scope": "static"
  },
  {
    "description": "Find node from node",
    "id": "module:@the-/ast.finder",
    "kind": "namespace",
    "longname": "module:@the-/ast.finder",
    "memberof": "module:@the-/ast",
    "meta": {
      "filename": "finder.js",
      "lineno": 1,
      "path": "/Users/okuni/Projects/the/packages/ast/lib"
    },
    "name": "finder",
    "order": 1,
    "scope": "static"
  },
  {
    "description": "Constant variables",
    "id": "module:@the-/ast.constants",
    "kind": "namespace",
    "longname": "module:@the-/ast.constants",
    "memberof": "module:@the-/ast",
    "meta": {
      "filename": "index.js",
      "lineno": 2,
      "path": "/Users/okuni/Projects/the/packages/ast/lib/constants"
    },
    "name": "constants",
    "order": 5,
    "scope": "static"
  },
  {
    "description": "Node types",
    "id": "module:@the-/ast.NodeTypes",
    "kind": "namespace",
    "longname": "module:@the-/ast.NodeTypes",
    "memberof": "module:@the-/ast",
    "meta": {
      "filename": "NodeTypes.js",
      "lineno": 2,
      "path": "/Users/okuni/Projects/the/packages/ast/lib/constants"
    },
    "name": "NodeTypes",
    "order": 6,
    "scope": "static"
  },
  {
    "description": "Find nodes by types",
    "id": "module:@the-/ast.finder.findByTypes",
    "kind": "function",
    "longname": "module:@the-/ast.finder.findByTypes",
    "memberof": "module:@the-/ast.finder",
    "meta": {
      "filename": "finder.js",
      "lineno": 19,
      "path": "/Users/okuni/Projects/the/packages/ast/lib"
    },
    "name": "findByTypes",
    "order": 2,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "node"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "name": "types"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<Object>"
          ]
        },
        "description": "Found nodes"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Parse source code",
    "exceptions": [
      {
        "type": {
          "names": [
            "Error"
          ]
        },
        "description": "Parser file error"
      }
    ],
    "id": "module:@the-/ast.parse",
    "kind": "function",
    "longname": "module:@the-/ast.parse",
    "memberof": "module:@the-/ast",
    "meta": {
      "filename": "parse.js",
      "lineno": 1,
      "path": "/Users/okuni/Projects/the/packages/ast/lib"
    },
    "name": "parse",
    "order": 4,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "src"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "defaultvalue": "{}",
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "parsed Object"
      }
    ],
    "scope": "static"
  },
  {
    "description": "explode() will take a visitor object with all of the various shorthands\nthat we support, and validates & normalizes it into a common format, ready\nto be used in traversal\n\nThe various shorthands are:\n* `Identifier() { ... }` -> `Identifier: { enter() { ... } }`\n* `\"Identifier|NumericLiteral\": { ... }` -> `Identifier: { ... }, NumericLiteral: { ... }`\n* Aliases in `babel-types`: e.g. `Property: { ... }` -> `ObjectProperty: { ... }, ClassProperty: { ... }`\n\nOther normalizations are:\n* `enter` and `exit` functions are wrapped in arrays, to ease merging of visitors",
    "id": "module.exports",
    "kind": "function",
    "longname": "module.exports",
    "memberof": "module",
    "meta": {
      "filename": "explode.js",
      "lineno": 22,
      "path": "/Users/okuni/Projects/the/packages/ast/lib/walk"
    },
    "name": "exports",
    "order": 7,
    "scope": "static"
  }
]
