<!--- Code generated by @the-/script-doc. DO NOT EDIT. -->

## Modules

<dl>
<dt><a href="#module_~~~~package_name~~~~/client">~~~~package_name~~~~/client</a></dt>
<dd><p>Client module</p>
</dd>
<dt><a href="#module_~~~~package_name~~~~/conf">~~~~package_name~~~~/conf</a></dt>
<dd><p>Project configurations</p>
</dd>
<dt><a href="#module_~~~~package_name~~~~/server">~~~~package_name~~~~/server</a></dt>
<dd><p>Application server</p>
</dd>
</dl>

<a name="module_~~~~package_name~~~~/client"></a>

## ~~~~package_name~~~~/client
Client module


* [~~~~package_name~~~~/client](#module_~~~~package_name~~~~/client)
    * [.actions](#module_~~~~package_name~~~~/client.actions) : <code>object</code>
        * [.AppAct()](#module_~~~~package_name~~~~/client.actions.AppAct) ⇒ <code>object</code>
            * [~appAct](#module_~~~~package_name~~~~/client.actions.AppAct..appAct) : <code>object</code>
        * [.ConnectionRetryAct()](#module_~~~~package_name~~~~/client.actions.ConnectionRetryAct) ⇒ <code>object</code>
            * [~connectionRetryAct](#module_~~~~package_name~~~~/client.actions.ConnectionRetryAct..connectionRetryAct) : <code>object</code>
        * [.HomeAct()](#module_~~~~package_name~~~~/client.actions.HomeAct) ⇒ <code>object</code>
            * [~homeAct](#module_~~~~package_name~~~~/client.actions.HomeAct..homeAct) : <code>object</code>
        * [.ToastAct()](#module_~~~~package_name~~~~/client.actions.ToastAct) ⇒ <code>object</code>
            * [~toastAct](#module_~~~~package_name~~~~/client.actions.ToastAct..toastAct) : <code>object</code>
    * [.client](#module_~~~~package_name~~~~/client.client) : <code>object</code>
        * [.create(namespace, [config])](#module_~~~~package_name~~~~/client.client.create) ⇒ <code>TheClient</code>
    * [.mappings](#module_~~~~package_name~~~~/client.mappings) : <code>object</code>
    * [.scopes](#module_~~~~package_name~~~~/client.scopes) : <code>object</code>
    * [.store](#module_~~~~package_name~~~~/client.store) : <code>object</code>
        * [.scopes](#module_~~~~package_name~~~~/client.store.scopes) : <code>object</code>
        * [.create()](#module_~~~~package_name~~~~/client.store.create) ⇒ <code>TheStore</code>

<a name="module_~~~~package_name~~~~/client.actions"></a>

### ~~~~package_name~~~~/client.actions : <code>object</code>
Action modules

**Kind**: static namespace of [<code>~~~~package_name~~~~/client</code>](#module_~~~~package_name~~~~/client)  

* [.actions](#module_~~~~package_name~~~~/client.actions) : <code>object</code>
    * [.AppAct()](#module_~~~~package_name~~~~/client.actions.AppAct) ⇒ <code>object</code>
        * [~appAct](#module_~~~~package_name~~~~/client.actions.AppAct..appAct) : <code>object</code>
    * [.ConnectionRetryAct()](#module_~~~~package_name~~~~/client.actions.ConnectionRetryAct) ⇒ <code>object</code>
        * [~connectionRetryAct](#module_~~~~package_name~~~~/client.actions.ConnectionRetryAct..connectionRetryAct) : <code>object</code>
    * [.HomeAct()](#module_~~~~package_name~~~~/client.actions.HomeAct) ⇒ <code>object</code>
        * [~homeAct](#module_~~~~package_name~~~~/client.actions.HomeAct..homeAct) : <code>object</code>
    * [.ToastAct()](#module_~~~~package_name~~~~/client.actions.ToastAct) ⇒ <code>object</code>
        * [~toastAct](#module_~~~~package_name~~~~/client.actions.ToastAct..toastAct) : <code>object</code>

<a name="module_~~~~package_name~~~~/client.actions.AppAct"></a>

#### actions.AppAct() ⇒ <code>object</code>
Act for "app"

**Kind**: static method of [<code>actions</code>](#module_~~~~package_name~~~~/client.actions)  
**Returns**: <code>object</code> - Act instance  
<a name="module_~~~~package_name~~~~/client.actions.AppAct..appAct"></a>

##### AppAct~appAct : <code>object</code>
**Kind**: inner namespace of [<code>AppAct</code>](#module_~~~~package_name~~~~/client.actions.AppAct)  
<a name="module_~~~~package_name~~~~/client.actions.ConnectionRetryAct"></a>

#### actions.ConnectionRetryAct() ⇒ <code>object</code>
Act for "connection.retry"

**Kind**: static method of [<code>actions</code>](#module_~~~~package_name~~~~/client.actions)  
**Returns**: <code>object</code> - Act instance  
<a name="module_~~~~package_name~~~~/client.actions.ConnectionRetryAct..connectionRetryAct"></a>

##### ConnectionRetryAct~connectionRetryAct : <code>object</code>
**Kind**: inner namespace of [<code>ConnectionRetryAct</code>](#module_~~~~package_name~~~~/client.actions.ConnectionRetryAct)  
<a name="module_~~~~package_name~~~~/client.actions.HomeAct"></a>

#### actions.HomeAct() ⇒ <code>object</code>
Act for "home"

**Kind**: static method of [<code>actions</code>](#module_~~~~package_name~~~~/client.actions)  
**Returns**: <code>object</code> - Act instance  
<a name="module_~~~~package_name~~~~/client.actions.HomeAct..homeAct"></a>

##### HomeAct~homeAct : <code>object</code>
**Kind**: inner namespace of [<code>HomeAct</code>](#module_~~~~package_name~~~~/client.actions.HomeAct)  
<a name="module_~~~~package_name~~~~/client.actions.ToastAct"></a>

#### actions.ToastAct() ⇒ <code>object</code>
Act for 'toast'

**Kind**: static method of [<code>actions</code>](#module_~~~~package_name~~~~/client.actions)  
**Returns**: <code>object</code> - Act instance  
<a name="module_~~~~package_name~~~~/client.actions.ToastAct..toastAct"></a>

##### ToastAct~toastAct : <code>object</code>
**Kind**: inner namespace of [<code>ToastAct</code>](#module_~~~~package_name~~~~/client.actions.ToastAct)  
<a name="module_~~~~package_name~~~~/client.client"></a>

### ~~~~package_name~~~~/client.client : <code>object</code>
Client index

**Kind**: static namespace of [<code>~~~~package_name~~~~/client</code>](#module_~~~~package_name~~~~/client)  
<a name="module_~~~~package_name~~~~/client.client.create"></a>

#### client.create(namespace, [config]) ⇒ <code>TheClient</code>
Client a site client

**Kind**: static method of [<code>client</code>](#module_~~~~package_name~~~~/client.client)  
**Returns**: <code>TheClient</code> - A client instance  

| Param | Type | Default |
| --- | --- | --- |
| namespace | <code>string</code> |  | 
| [config] | <code>object</code> | <code>{}</code> | 

<a name="module_~~~~package_name~~~~/client.mappings"></a>

### ~~~~package_name~~~~/client.mappings : <code>object</code>
Module mappings

**Kind**: static namespace of [<code>~~~~package_name~~~~/client</code>](#module_~~~~package_name~~~~/client)  
<a name="module_~~~~package_name~~~~/client.scopes"></a>

### ~~~~package_name~~~~/client.scopes : <code>object</code>
Scopes

**Kind**: static namespace of [<code>~~~~package_name~~~~/client</code>](#module_~~~~package_name~~~~/client)  
<a name="module_~~~~package_name~~~~/client.store"></a>

### ~~~~package_name~~~~/client.store : <code>object</code>
Client state store

**Kind**: static namespace of [<code>~~~~package_name~~~~/client</code>](#module_~~~~package_name~~~~/client)  

* [.store](#module_~~~~package_name~~~~/client.store) : <code>object</code>
    * [.scopes](#module_~~~~package_name~~~~/client.store.scopes) : <code>object</code>
    * [.create()](#module_~~~~package_name~~~~/client.store.create) ⇒ <code>TheStore</code>

<a name="module_~~~~package_name~~~~/client.store.scopes"></a>

#### store.scopes : <code>object</code>
Ref resolved scopes

**Kind**: static namespace of [<code>store</code>](#module_~~~~package_name~~~~/client.store)  
<a name="module_~~~~package_name~~~~/client.store.create"></a>

#### store.create() ⇒ <code>TheStore</code>
Create an new store

**Kind**: static method of [<code>store</code>](#module_~~~~package_name~~~~/client.store)  
<a name="module_~~~~package_name~~~~/conf"></a>

## ~~~~package_name~~~~/conf
Project configurations


* [~~~~package_name~~~~/conf](#module_~~~~package_name~~~~/conf)
    * [.GlobalKeys](#module_~~~~package_name~~~~/conf.GlobalKeys) : <code>object</code>
        * [.APP](#module_~~~~package_name~~~~/conf.GlobalKeys.APP)
        * [.CONTEXT](#module_~~~~package_name~~~~/conf.GlobalKeys.CONTEXT)
        * [.PROPS](#module_~~~~package_name~~~~/conf.GlobalKeys.PROPS)
        * [.STORE](#module_~~~~package_name~~~~/conf.GlobalKeys.STORE)
    * [.Icons](#module_~~~~package_name~~~~/conf.Icons) : <code>object</code>
    * [.locales](#module_~~~~package_name~~~~/conf.locales) : <code>object</code>
        * [.en](#module_~~~~package_name~~~~/conf.locales.en) : <code>object</code>
    * [.Paths](#module_~~~~package_name~~~~/conf.Paths) : <code>object</code>
    * [.SrcSets](#module_~~~~package_name~~~~/conf.SrcSets) : <code>object</code>

<a name="module_~~~~package_name~~~~/conf.GlobalKeys"></a>

### ~~~~package_name~~~~/conf.GlobalKeys : <code>object</code>
Global keys

**Kind**: static namespace of [<code>~~~~package_name~~~~/conf</code>](#module_~~~~package_name~~~~/conf)  

* [.GlobalKeys](#module_~~~~package_name~~~~/conf.GlobalKeys) : <code>object</code>
    * [.APP](#module_~~~~package_name~~~~/conf.GlobalKeys.APP)
    * [.CONTEXT](#module_~~~~package_name~~~~/conf.GlobalKeys.CONTEXT)
    * [.PROPS](#module_~~~~package_name~~~~/conf.GlobalKeys.PROPS)
    * [.STORE](#module_~~~~package_name~~~~/conf.GlobalKeys.STORE)

<a name="module_~~~~package_name~~~~/conf.GlobalKeys.APP"></a>

#### GlobalKeys.APP
Key of app

**Kind**: static property of [<code>GlobalKeys</code>](#module_~~~~package_name~~~~/conf.GlobalKeys)  
<a name="module_~~~~package_name~~~~/conf.GlobalKeys.CONTEXT"></a>

#### GlobalKeys.CONTEXT
Key of app context

**Kind**: static property of [<code>GlobalKeys</code>](#module_~~~~package_name~~~~/conf.GlobalKeys)  
<a name="module_~~~~package_name~~~~/conf.GlobalKeys.PROPS"></a>

#### GlobalKeys.PROPS
Key of app props

**Kind**: static property of [<code>GlobalKeys</code>](#module_~~~~package_name~~~~/conf.GlobalKeys)  
<a name="module_~~~~package_name~~~~/conf.GlobalKeys.STORE"></a>

#### GlobalKeys.STORE
Key of app store

**Kind**: static property of [<code>GlobalKeys</code>](#module_~~~~package_name~~~~/conf.GlobalKeys)  
<a name="module_~~~~package_name~~~~/conf.Icons"></a>

### ~~~~package_name~~~~/conf.Icons : <code>object</code>
Site icons

**Kind**: static namespace of [<code>~~~~package_name~~~~/conf</code>](#module_~~~~package_name~~~~/conf)  
<a name="module_~~~~package_name~~~~/conf.locales"></a>

### ~~~~package_name~~~~/conf.locales : <code>object</code>
Message resources

**Kind**: static namespace of [<code>~~~~package_name~~~~/conf</code>](#module_~~~~package_name~~~~/conf)  
<a name="module_~~~~package_name~~~~/conf.locales.en"></a>

#### locales.en : <code>object</code>
en locales

**Kind**: static namespace of [<code>locales</code>](#module_~~~~package_name~~~~/conf.locales)  
<a name="module_~~~~package_name~~~~/conf.Paths"></a>

### ~~~~package_name~~~~/conf.Paths : <code>object</code>
Site Paths

**Kind**: static namespace of [<code>~~~~package_name~~~~/conf</code>](#module_~~~~package_name~~~~/conf)  
<a name="module_~~~~package_name~~~~/conf.SrcSets"></a>

### ~~~~package_name~~~~/conf.SrcSets : <code>object</code>
Source url set

**Kind**: static namespace of [<code>~~~~package_name~~~~/conf</code>](#module_~~~~package_name~~~~/conf)  
<a name="module_~~~~package_name~~~~/server"></a>

## ~~~~package_name~~~~/server
Application server


* [~~~~package_name~~~~/server](#module_~~~~package_name~~~~/server)
    * [.constants](#module_~~~~package_name~~~~/server.constants) : <code>object</code>
        * [.DockerContainers](#module_~~~~package_name~~~~/server.constants.DockerContainers) : <code>object</code>
        * [.DockerPorts](#module_~~~~package_name~~~~/server.constants.DockerPorts) : <code>object</code>
        * [.MysqlConnections](#module_~~~~package_name~~~~/server.constants.MysqlConnections) : <code>object</code>
        * [.Project](#module_~~~~package_name~~~~/server.constants.Project) : <code>object</code>
        * [.RedisConnections](#module_~~~~package_name~~~~/server.constants.RedisConnections) : <code>object</code>
        * [.SettingValues](#module_~~~~package_name~~~~/server.constants.SettingValues) : <code>object</code>
        * [.WebApps](#module_~~~~package_name~~~~/server.constants.WebApps) : <code>object</code>
            * [~seated](#module_~~~~package_name~~~~/server.constants.WebApps..seated) : <code>object</code>
    * [.controllers](#module_~~~~package_name~~~~/server.controllers) : <code>object</code>
        * [.AppCtrl()](#module_~~~~package_name~~~~/server.controllers.AppCtrl)
    * [.db](#module_~~~~package_name~~~~/server.db) : <code>object</code>
        * [.resources](#module_~~~~package_name~~~~/server.db.resources) : <code>object</code>
            * [.UserResource](#module_~~~~package_name~~~~/server.db.resources.UserResource) ⇐ <code>TheResource</code>
                * [new UserResource()](#new_module_~~~~package_name~~~~/server.db.resources.UserResource_new)
        * [.create([config])](#module_~~~~package_name~~~~/server.db.create) ⇒ <code>TheDB</code>
        * [.migration()](#module_~~~~package_name~~~~/server.db.migration)
    * [.mappings](#module_~~~~package_name~~~~/server.mappings) : <code>object</code>
    * [.server](#module_~~~~package_name~~~~/server.server) : <code>object</code>
        * [.create()](#module_~~~~package_name~~~~/server.server.create) ⇒ <code>TheServer</code>

<a name="module_~~~~package_name~~~~/server.constants"></a>

### ~~~~package_name~~~~/server.constants : <code>object</code>
Server constant variables

**Kind**: static namespace of [<code>~~~~package_name~~~~/server</code>](#module_~~~~package_name~~~~/server)  

* [.constants](#module_~~~~package_name~~~~/server.constants) : <code>object</code>
    * [.DockerContainers](#module_~~~~package_name~~~~/server.constants.DockerContainers) : <code>object</code>
    * [.DockerPorts](#module_~~~~package_name~~~~/server.constants.DockerPorts) : <code>object</code>
    * [.MysqlConnections](#module_~~~~package_name~~~~/server.constants.MysqlConnections) : <code>object</code>
    * [.Project](#module_~~~~package_name~~~~/server.constants.Project) : <code>object</code>
    * [.RedisConnections](#module_~~~~package_name~~~~/server.constants.RedisConnections) : <code>object</code>
    * [.SettingValues](#module_~~~~package_name~~~~/server.constants.SettingValues) : <code>object</code>
    * [.WebApps](#module_~~~~package_name~~~~/server.constants.WebApps) : <code>object</code>
        * [~seated](#module_~~~~package_name~~~~/server.constants.WebApps..seated) : <code>object</code>

<a name="module_~~~~package_name~~~~/server.constants.DockerContainers"></a>

#### constants.DockerContainers : <code>object</code>
DockerContainers

**Kind**: static namespace of [<code>constants</code>](#module_~~~~package_name~~~~/server.constants)  
<a name="module_~~~~package_name~~~~/server.constants.DockerPorts"></a>

#### constants.DockerPorts : <code>object</code>
DockerPorts

**Kind**: static namespace of [<code>constants</code>](#module_~~~~package_name~~~~/server.constants)  
<a name="module_~~~~package_name~~~~/server.constants.MysqlConnections"></a>

#### constants.MysqlConnections : <code>object</code>
MysqlConnections

**Kind**: static namespace of [<code>constants</code>](#module_~~~~package_name~~~~/server.constants)  
<a name="module_~~~~package_name~~~~/server.constants.Project"></a>

#### constants.Project : <code>object</code>
Project

**Kind**: static namespace of [<code>constants</code>](#module_~~~~package_name~~~~/server.constants)  
<a name="module_~~~~package_name~~~~/server.constants.RedisConnections"></a>

#### constants.RedisConnections : <code>object</code>
RedisConnections

**Kind**: static namespace of [<code>constants</code>](#module_~~~~package_name~~~~/server.constants)  
<a name="module_~~~~package_name~~~~/server.constants.SettingValues"></a>

#### constants.SettingValues : <code>object</code>
setting/SettingValues

**Kind**: static namespace of [<code>constants</code>](#module_~~~~package_name~~~~/server.constants)  
**Access**: protected  
<a name="module_~~~~package_name~~~~/server.constants.WebApps"></a>

#### constants.WebApps : <code>object</code>
WebApps

**Kind**: static namespace of [<code>constants</code>](#module_~~~~package_name~~~~/server.constants)  
<a name="module_~~~~package_name~~~~/server.constants.WebApps..seated"></a>

##### WebApps~seated : <code>object</code>
**Kind**: inner namespace of [<code>WebApps</code>](#module_~~~~package_name~~~~/server.constants.WebApps)  
<a name="module_~~~~package_name~~~~/server.controllers"></a>

### ~~~~package_name~~~~/server.controllers : <code>object</code>
Server controllers

**Kind**: static namespace of [<code>~~~~package_name~~~~/server</code>](#module_~~~~package_name~~~~/server)  
<a name="module_~~~~package_name~~~~/server.controllers.AppCtrl"></a>

#### controllers.AppCtrl()
Application controller

**Kind**: static method of [<code>controllers</code>](#module_~~~~package_name~~~~/server.controllers)  
<a name="module_~~~~package_name~~~~/server.db"></a>

### ~~~~package_name~~~~/server.db : <code>object</code>
Database module

**Kind**: static namespace of [<code>~~~~package_name~~~~/server</code>](#module_~~~~package_name~~~~/server)  

* [.db](#module_~~~~package_name~~~~/server.db) : <code>object</code>
    * [.resources](#module_~~~~package_name~~~~/server.db.resources) : <code>object</code>
        * [.UserResource](#module_~~~~package_name~~~~/server.db.resources.UserResource) ⇐ <code>TheResource</code>
            * [new UserResource()](#new_module_~~~~package_name~~~~/server.db.resources.UserResource_new)
    * [.create([config])](#module_~~~~package_name~~~~/server.db.create) ⇒ <code>TheDB</code>
    * [.migration()](#module_~~~~package_name~~~~/server.db.migration)

<a name="module_~~~~package_name~~~~/server.db.resources"></a>

#### db.resources : <code>object</code>
Db resource classes

**Kind**: static namespace of [<code>db</code>](#module_~~~~package_name~~~~/server.db)  

* [.resources](#module_~~~~package_name~~~~/server.db.resources) : <code>object</code>
    * [.UserResource](#module_~~~~package_name~~~~/server.db.resources.UserResource) ⇐ <code>TheResource</code>
        * [new UserResource()](#new_module_~~~~package_name~~~~/server.db.resources.UserResource_new)

<a name="module_~~~~package_name~~~~/server.db.resources.UserResource"></a>

##### resources.UserResource ⇐ <code>TheResource</code>
**Kind**: static class of [<code>resources</code>](#module_~~~~package_name~~~~/server.db.resources)  
**Extends**: <code>TheResource</code>  
<a name="new_module_~~~~package_name~~~~/server.db.resources.UserResource_new"></a>

###### new UserResource()
Resource for room

<a name="module_~~~~package_name~~~~/server.db.create"></a>

#### db.create([config]) ⇒ <code>TheDB</code>
Create an db instance

**Kind**: static method of [<code>db</code>](#module_~~~~package_name~~~~/server.db)  

| Param | Type |
| --- | --- |
| [config] | <code>object</code> | 

<a name="module_~~~~package_name~~~~/server.db.migration"></a>

#### db.migration()
**Kind**: static method of [<code>db</code>](#module_~~~~package_name~~~~/server.db)  
<a name="module_~~~~package_name~~~~/server.mappings"></a>

### ~~~~package_name~~~~/server.mappings : <code>object</code>
Module mappings

**Kind**: static namespace of [<code>~~~~package_name~~~~/server</code>](#module_~~~~package_name~~~~/server)  
<a name="module_~~~~package_name~~~~/server.server"></a>

### ~~~~package_name~~~~/server.server : <code>object</code>
**Kind**: static namespace of [<code>~~~~package_name~~~~/server</code>](#module_~~~~package_name~~~~/server)  
<a name="module_~~~~package_name~~~~/server.server.create"></a>

#### server.create() ⇒ <code>TheServer</code>
Create an server instance

**Kind**: static method of [<code>server</code>](#module_~~~~package_name~~~~/server.server)  
