[
  {
    "description": "DB for the-framework",
    "id": "module:@the-/db",
    "kind": "module",
    "license": "MIT",
    "longname": "module:@the-/db",
    "meta": {
      "filename": "index.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "@the-/db",
    "order": 4,
    "typicalname": "db",
    "version": "15.4.9"
  },
  {
    "id": "module:@the-/db.TheDB()",
    "kind": "constructor",
    "longname": "module:@the-/db.TheDB",
    "memberof": "module:@the-/db.TheDB",
    "name": "TheDB",
    "order": 7,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "uuid.v4()",
        "description": "Name of clay-lump",
        "name": "config.name"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "'memory'",
        "description": "Database dialect. \"mysql\", \"json\", \"memory\", \"localstorage\", or \"sqlite\"",
        "name": "config.dialect"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Storage file name for \"sqlite\" or \"json\" dialect",
        "name": "config.storage"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Name of database schema",
        "name": "config.database"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Database username",
        "name": "config.username"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Database password",
        "name": "config.password"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Database password",
        "name": "config.host"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "Database password",
        "name": "config.port"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Database plugin creators",
        "name": "config.plugins"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Database hook creators",
        "name": "config.hooks"
      },
      {
        "type": {
          "names": [
            "object"
          ]
        },
        "optional": true,
        "description": "Database resource classes",
        "name": "config.resources"
      }
    ]
  },
  {
    "description": "Resource of data history",
    "id": "module:@the-/db.TheLogResource()",
    "kind": "constructor",
    "longname": "module:@the-/db.TheLogResource",
    "memberof": "module:@the-/db.TheLogResource",
    "name": "TheLogResource",
    "order": 48
  },
  {
    "description": "Resource to manage schema",
    "id": "module:@the-/db.TheSchemaResource()",
    "kind": "constructor",
    "longname": "module:@the-/db.TheSchemaResource",
    "memberof": "module:@the-/db.TheSchemaResource",
    "name": "TheSchemaResource",
    "order": 50
  },
  {
    "description": "Register hooks from mapping",
    "id": "module:@the-/db.TheDB#hooksFromMapping",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#hooksFromMapping",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "TheDB.js",
      "lineno": 134,
      "path": "lib"
    },
    "name": "hooksFromMapping",
    "order": 9,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "HookMapping"
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Register resource form Resource Class",
    "id": "module:@the-/db.TheDB#load",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#load",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "TheDB.js",
      "lineno": 151,
      "path": "lib"
    },
    "name": "load",
    "order": 10,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Resource class to register",
        "name": "ResourceClass"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Name of resource",
        "name": "resourceName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Loaded resource instance"
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Load resources from mapping object",
    "id": "module:@the-/db.TheDB#loadFromMapping",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#loadFromMapping",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "TheDB.js",
      "lineno": 273,
      "path": "lib"
    },
    "name": "loadFromMapping",
    "order": 11,
    "params": [
      {
        "type": {
          "names": [
            "Object.<string, function()>"
          ]
        },
        "description": "Resource name and class",
        "name": "ResourceMapping"
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Register plugins from mapping",
    "id": "module:@the-/db.TheDB#pluginFromMapping",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#pluginFromMapping",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "TheDB.js",
      "lineno": 283,
      "path": "lib"
    },
    "name": "pluginFromMapping",
    "order": 12,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "PluginMapping"
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Aut close before exit",
    "id": "module:@the-/db.TheDB#unref",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#unref",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "TheDB.js",
      "lineno": 296,
      "path": "lib"
    },
    "name": "unref",
    "order": 13,
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "TheDB"
          ]
        },
        "description": "this"
      }
    ],
    "scope": "instance"
  },
  {
    "async": true,
    "description": "Drop database",
    "id": "module:@the-/db.TheDB#drop",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#drop",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "TheDB.js",
      "lineno": 339,
      "path": "lib"
    },
    "name": "drop",
    "order": 14,
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<undefined>"
          ]
        }
      }
    ],
    "scope": "instance"
  },
  {
    "async": true,
    "description": "Invalidate entity",
    "id": "module:@the-/db.TheDB#invalidate",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#invalidate",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "TheDB.js",
      "lineno": 373,
      "path": "lib"
    },
    "name": "invalidate",
    "order": 15,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityRef"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<undefined>"
          ]
        }
      }
    ],
    "scope": "instance"
  },
  {
    "async": true,
    "description": "Create transaction",
    "id": "module:@the-/db.TheDB#transaction",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#transaction",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "TheDB.js",
      "lineno": 403,
      "path": "lib"
    },
    "name": "transaction",
    "order": 16,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "nullable": true,
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<*>"
          ]
        }
      }
    ],
    "scope": "instance"
  },
  {
    "async": true,
    "description": "Update database migration version",
    "id": "module:@the-/db.TheDB#updateVersion",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#updateVersion",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "TheDB.js",
      "lineno": 420,
      "path": "lib"
    },
    "name": "updateVersion",
    "order": 17,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Version string",
        "name": "version"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.boolean"
          ]
        },
        "description": "Success or not"
      }
    ],
    "scope": "instance"
  },
  {
    "async": true,
    "description": "Run database migration",
    "id": "module:@the-/db~MigrateMixed#migrate",
    "kind": "function",
    "longname": "module:@the-/db~MigrateMixed#migrate",
    "memberof": "module:@the-/db~MigrateMixed",
    "meta": {
      "filename": "migrateMix.js",
      "lineno": 21,
      "path": "lib/mixins"
    },
    "name": "migrate",
    "order": 34,
    "params": [
      {
        "type": {
          "names": [
            "Object.<string, function()>"
          ]
        },
        "description": "Migration handler for each versions",
        "name": "handlers"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<?Object>"
          ]
        },
        "description": "Migration result"
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Request to refresh entity",
    "id": "module:@the-/db.refreshMix~RefreshMixed#requestToRefresh",
    "kind": "function",
    "longname": "module:@the-/db.refreshMix~RefreshMixed#requestToRefresh",
    "memberof": "module:@the-/db.refreshMix~RefreshMixed",
    "meta": {
      "filename": "refreshMix.js",
      "lineno": 36,
      "path": "lib/mixins"
    },
    "name": "requestToRefresh",
    "order": 37,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityRef"
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Start refreshing loop",
    "id": "module:@the-/db.refreshMix~RefreshMixed#startRefreshLoop",
    "kind": "function",
    "longname": "module:@the-/db.refreshMix~RefreshMixed#startRefreshLoop",
    "memberof": "module:@the-/db.refreshMix~RefreshMixed",
    "meta": {
      "filename": "refreshMix.js",
      "lineno": 48,
      "path": "lib/mixins"
    },
    "name": "startRefreshLoop",
    "order": 38,
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "interval"
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Stop refreshing loop",
    "id": "module:@the-/db.refreshMix~RefreshMixed#stopRefreshLoop",
    "kind": "function",
    "longname": "module:@the-/db.refreshMix~RefreshMixed#stopRefreshLoop",
    "memberof": "module:@the-/db.refreshMix~RefreshMixed",
    "meta": {
      "filename": "refreshMix.js",
      "lineno": 64,
      "path": "lib/mixins"
    },
    "name": "stopRefreshLoop",
    "order": 39,
    "params": [],
    "scope": "instance"
  },
  {
    "async": true,
    "description": "Wait until refresh",
    "id": "module:@the-/db.refreshMix~RefreshMixed#waitToRefresh",
    "kind": "function",
    "longname": "module:@the-/db.refreshMix~RefreshMixed#waitToRefresh",
    "memberof": "module:@the-/db.refreshMix~RefreshMixed",
    "meta": {
      "filename": "refreshMix.js",
      "lineno": 104,
      "path": "lib/mixins"
    },
    "name": "waitToRefresh",
    "order": 40,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityRef"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "defaultvalue": "{}",
        "description": "Optional settings",
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<boolean>"
          ]
        },
        "description": "- Full filled"
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Check if resource exists",
    "exceptions": [
      {
        "type": {
          "names": [
            "Error"
          ]
        },
        "description": "Resource not found error"
      }
    ],
    "id": "module:@the-/db.resourceMix~ResourceMixed#assertResource",
    "kind": "function",
    "longname": "module:@the-/db.resourceMix~ResourceMixed#assertResource",
    "memberof": "module:@the-/db.resourceMix~ResourceMixed",
    "meta": {
      "filename": "resourceMix.js",
      "lineno": 18,
      "path": "lib/mixins"
    },
    "name": "assertResource",
    "order": 43,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "resourceName"
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Get resource with name",
    "id": "module:@the-/db.resourceMix~ResourceMixed#getResource",
    "kind": "function",
    "longname": "module:@the-/db.resourceMix~ResourceMixed#getResource",
    "memberof": "module:@the-/db.resourceMix~ResourceMixed",
    "meta": {
      "filename": "resourceMix.js",
      "lineno": 30,
      "path": "lib/mixins"
    },
    "name": "getResource",
    "order": 44,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "resourceName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "nullable": true,
        "description": "Resource instance"
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Check if resource exists",
    "id": "module:@the-/db.resourceMix~ResourceMixed#hasResource",
    "kind": "function",
    "longname": "module:@the-/db.resourceMix~ResourceMixed#hasResource",
    "memberof": "module:@the-/db.resourceMix~ResourceMixed",
    "meta": {
      "filename": "resourceMix.js",
      "lineno": 43,
      "path": "lib/mixins"
    },
    "name": "hasResource",
    "order": 45,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "resourceName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Request to refresh entity",
    "id": "module:@the-/db.TheDB#requestToRefresh",
    "inherited": true,
    "inherits": "module:@the-/db.refreshMix~RefreshMixed#requestToRefresh",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#requestToRefresh",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "refreshMix.js",
      "lineno": 36,
      "path": "lib/mixins"
    },
    "name": "requestToRefresh",
    "order": 55,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityRef"
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Start refreshing loop",
    "id": "module:@the-/db.TheDB#startRefreshLoop",
    "inherited": true,
    "inherits": "module:@the-/db.refreshMix~RefreshMixed#startRefreshLoop",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#startRefreshLoop",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "refreshMix.js",
      "lineno": 48,
      "path": "lib/mixins"
    },
    "name": "startRefreshLoop",
    "order": 56,
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "interval"
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Stop refreshing loop",
    "id": "module:@the-/db.TheDB#stopRefreshLoop",
    "inherited": true,
    "inherits": "module:@the-/db.refreshMix~RefreshMixed#stopRefreshLoop",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#stopRefreshLoop",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "refreshMix.js",
      "lineno": 64,
      "path": "lib/mixins"
    },
    "name": "stopRefreshLoop",
    "order": 57,
    "scope": "instance"
  },
  {
    "async": true,
    "description": "Wait until refresh",
    "id": "module:@the-/db.TheDB#waitToRefresh",
    "inherited": true,
    "inherits": "module:@the-/db.refreshMix~RefreshMixed#waitToRefresh",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#waitToRefresh",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "refreshMix.js",
      "lineno": 104,
      "path": "lib/mixins"
    },
    "name": "waitToRefresh",
    "order": 58,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "entityRef"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "defaultvalue": "{}",
        "description": "Optional settings",
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<boolean>"
          ]
        },
        "description": "- Full filled"
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Check if resource exists",
    "exceptions": [
      {
        "type": {
          "names": [
            "Error"
          ]
        },
        "description": "Resource not found error"
      }
    ],
    "id": "module:@the-/db.TheDB#assertResource",
    "inherited": true,
    "inherits": "module:@the-/db.resourceMix~ResourceMixed#assertResource",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#assertResource",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "resourceMix.js",
      "lineno": 18,
      "path": "lib/mixins"
    },
    "name": "assertResource",
    "order": 59,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "resourceName"
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Get resource with name",
    "id": "module:@the-/db.TheDB#getResource",
    "inherited": true,
    "inherits": "module:@the-/db.resourceMix~ResourceMixed#getResource",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#getResource",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "resourceMix.js",
      "lineno": 30,
      "path": "lib/mixins"
    },
    "name": "getResource",
    "order": 60,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "resourceName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "nullable": true,
        "description": "Resource instance"
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Check if resource exists",
    "id": "module:@the-/db.TheDB#hasResource",
    "inherited": true,
    "inherits": "module:@the-/db.resourceMix~ResourceMixed#hasResource",
    "kind": "function",
    "longname": "module:@the-/db.TheDB#hasResource",
    "memberof": "module:@the-/db.TheDB",
    "meta": {
      "filename": "resourceMix.js",
      "lineno": 43,
      "path": "lib/mixins"
    },
    "name": "hasResource",
    "order": 61,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "resourceName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "scope": "instance"
  },
  {
    "augments": [
      "module:@the-/db.cascadeMix~CascadeMixed",
      "module:@the-/db.cliMix~CliMixed",
      "module:@the-/db.exportImportMix~ExportImportMixed",
      "module:@the-/db.migrateMix~MigrateMixed",
      "module:@the-/db.refreshMix~RefreshMixed",
      "module:@the-/db.resourceMix~ResourceMixed"
    ],
    "id": "module:@the-/db.TheDB",
    "kind": "class",
    "longname": "module:@the-/db.TheDB",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "TheDB.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "TheDB",
    "order": 6,
    "scope": "static"
  },
  {
    "id": "module:@the-/db.TheDBBase",
    "kind": "class",
    "longname": "module:@the-/db.TheDBBase",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "TheDB.js",
      "lineno": 45,
      "path": "lib"
    },
    "name": "TheDBBase",
    "order": 8,
    "scope": "static"
  },
  {
    "id": "module:@the-/db.TheLogResource",
    "kind": "class",
    "longname": "module:@the-/db.TheLogResource",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "TheLogResource.js",
      "lineno": 2,
      "path": "lib/resources"
    },
    "name": "TheLogResource",
    "order": 47,
    "scope": "static"
  },
  {
    "id": "module:@the-/db.TheSchemaResource",
    "kind": "class",
    "longname": "module:@the-/db.TheSchemaResource",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "TheSchemaResource.js",
      "lineno": 2,
      "path": "lib/resources"
    },
    "name": "TheSchemaResource",
    "order": 49,
    "scope": "static"
  },
  {
    "id": "module:@the-/db.helpers.binder",
    "kind": "namespace",
    "longname": "module:@the-/db.helpers.binder",
    "memberof": "module:@the-/db.helpers",
    "meta": {
      "filename": "binder.js",
      "lineno": 2,
      "path": "lib/helpers"
    },
    "name": "binder",
    "order": 18,
    "scope": "static"
  },
  {
    "access": "protected",
    "description": "Helper functions",
    "id": "module:@the-/db.helpers",
    "kind": "namespace",
    "longname": "module:@the-/db.helpers",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "index.js",
      "lineno": 2,
      "path": "lib/helpers"
    },
    "name": "helpers",
    "order": 22,
    "scope": "static"
  },
  {
    "description": "Mixin functions",
    "id": "module:@the-/db.mixins",
    "kind": "namespace",
    "longname": "module:@the-/db.mixins",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "index.js",
      "lineno": 2,
      "path": "lib/mixins"
    },
    "name": "mixins",
    "order": 31,
    "scope": "static"
  },
  {
    "description": "Buildin resources",
    "id": "module:@the-/db.resources",
    "kind": "namespace",
    "longname": "module:@the-/db.resources",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "index.js",
      "lineno": 2,
      "path": "lib/resources"
    },
    "name": "resources",
    "order": 46,
    "scope": "static"
  },
  {
    "description": "Create a TheDB instance",
    "id": "module:@the-/db.create",
    "kind": "function",
    "longname": "module:@the-/db.create",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "create.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "create",
    "order": 0,
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "variable": true,
        "name": "args"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "module:@the-/db.TheDB"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "Alias of {@link module:@the-/db.create}",
    "id": "module:@the-/db.default",
    "kind": "function",
    "longname": "module:@the-/db.default",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "default.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "default",
    "order": 1,
    "scope": "static"
  },
  {
    "description": "Create driver from env",
    "id": "module:@the-/db.driverFromEnv",
    "kind": "function",
    "longname": "module:@the-/db.driverFromEnv",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "driverFromEnv.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "driverFromEnv",
    "order": 2,
    "scope": "static"
  },
  {
    "description": "Do exec for env",
    "id": "module:@the-/db.execForEnv",
    "kind": "function",
    "longname": "module:@the-/db.execForEnv",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "execForEnv.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "execForEnv",
    "order": 3,
    "scope": "static"
  },
  {
    "description": "Do setup for env",
    "id": "module:@the-/db.setupForEnv",
    "kind": "function",
    "longname": "module:@the-/db.setupForEnv",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "setupForEnv.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "setupForEnv",
    "order": 5,
    "scope": "static"
  },
  {
    "id": "module:@the-/db.helpers.createTerminal",
    "kind": "function",
    "longname": "module:@the-/db.helpers.createTerminal",
    "memberof": "module:@the-/db.helpers",
    "meta": {
      "filename": "createTerminal.js",
      "lineno": 2,
      "path": "lib/helpers"
    },
    "name": "createTerminal",
    "order": 19,
    "scope": "static"
  },
  {
    "id": "module:@the-/db.helpers.execMysql",
    "kind": "function",
    "longname": "module:@the-/db.helpers.execMysql",
    "memberof": "module:@the-/db.helpers",
    "meta": {
      "filename": "execMysql.js",
      "lineno": 2,
      "path": "lib/helpers"
    },
    "name": "execMysql",
    "order": 20,
    "scope": "static"
  },
  {
    "id": "module:@the-/db.helpers.execSqlite",
    "kind": "function",
    "longname": "module:@the-/db.helpers.execSqlite",
    "memberof": "module:@the-/db.helpers",
    "meta": {
      "filename": "execSqlite.js",
      "lineno": 2,
      "path": "lib/helpers"
    },
    "name": "execSqlite",
    "order": 21,
    "scope": "static"
  },
  {
    "description": "Parse db policy",
    "id": "execSqlite.parsePolicy",
    "kind": "function",
    "longname": "execSqlite.parsePolicy",
    "memberof": "execSqlite",
    "meta": {
      "filename": "parsePolicy.js",
      "lineno": 2,
      "path": "lib/helpers"
    },
    "name": "parsePolicy",
    "order": 23,
    "scope": "static"
  },
  {
    "description": "Parse schema",
    "id": "module:@the-/db.helpers.parseSchema",
    "kind": "function",
    "longname": "module:@the-/db.helpers.parseSchema",
    "memberof": "module:@the-/db.helpers",
    "meta": {
      "filename": "parseSchema.js",
      "lineno": 2,
      "path": "lib/helpers"
    },
    "name": "parseSchema",
    "order": 24,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "Schema"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "defaultvalue": "{}",
        "name": "options"
      }
    ],
    "scope": "static"
  },
  {
    "id": "module:@the-/db.cascadeMix",
    "kind": "function",
    "longname": "module:@the-/db.cascadeMix",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "cascadeMix.js",
      "lineno": 2,
      "path": "lib/mixins"
    },
    "name": "cascadeMix",
    "order": 25,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Mixed Class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Add cli methods",
    "id": "module:@the-/db.cliMix",
    "kind": "function",
    "longname": "module:@the-/db.cliMix",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "cliMix.js",
      "lineno": 2,
      "path": "lib/mixins"
    },
    "name": "cliMix",
    "order": 27,
    "scope": "static"
  },
  {
    "description": "Add export/import methods",
    "id": "module:@the-/db.exportImportMix",
    "kind": "function",
    "longname": "module:@the-/db.exportImportMix",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "exportImportMix.js",
      "lineno": 2,
      "path": "lib/mixins"
    },
    "name": "exportImportMix",
    "order": 29,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        }
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "Add migrate methods",
    "id": "module:@the-/db.migrateMix",
    "kind": "function",
    "longname": "module:@the-/db.migrateMix",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "migrateMix.js",
      "lineno": 2,
      "path": "lib/mixins"
    },
    "name": "migrateMix",
    "order": 32,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        }
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "id": "module:@the-/db.refreshMix",
    "kind": "function",
    "longname": "module:@the-/db.refreshMix",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "refreshMix.js",
      "lineno": 2,
      "path": "lib/mixins"
    },
    "name": "refreshMix",
    "order": 35,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Mixed Class"
      }
    ],
    "scope": "static"
  },
  {
    "id": "module:@the-/db.resourceMix",
    "kind": "function",
    "longname": "module:@the-/db.resourceMix",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "resourceMix.js",
      "lineno": 2,
      "path": "lib/mixins"
    },
    "name": "resourceMix",
    "order": 41,
    "scope": "static"
  },
  {
    "id": "module:@the-/db.setup.setupMongo",
    "kind": "function",
    "longname": "module:@the-/db.setup.setupMongo",
    "memberof": "module:@the-/db.setup",
    "meta": {
      "filename": "setupMongo.js",
      "lineno": 2,
      "path": "lib/setup"
    },
    "name": "setupMongo",
    "order": 51,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "config"
      }
    ],
    "scope": "static"
  },
  {
    "id": "module:@the-/db.setup.setupMysql",
    "kind": "function",
    "longname": "module:@the-/db.setup.setupMysql",
    "memberof": "module:@the-/db.setup",
    "meta": {
      "filename": "setupMysql.js",
      "lineno": 2,
      "path": "lib/setup"
    },
    "name": "setupMysql",
    "order": 52,
    "scope": "static"
  },
  {
    "id": "module:@the-/db.setup.setupPostgres",
    "kind": "function",
    "longname": "module:@the-/db.setup.setupPostgres",
    "memberof": "module:@the-/db.setup",
    "meta": {
      "filename": "setupPostgres.js",
      "lineno": 2,
      "path": "lib/setup"
    },
    "name": "setupPostgres",
    "order": 53,
    "scope": "static"
  },
  {
    "id": "module:@the-/db.setup.setupSqlite",
    "kind": "function",
    "longname": "module:@the-/db.setup.setupSqlite",
    "memberof": "module:@the-/db.setup",
    "meta": {
      "filename": "setupSqlite.js",
      "lineno": 2,
      "path": "lib/setup"
    },
    "name": "setupSqlite",
    "order": 54,
    "scope": "static"
  },
  {
    "id": "module:@the-/db.cascadeMix~CascadeMixed",
    "kind": "class",
    "longname": "module:@the-/db.cascadeMix~CascadeMixed",
    "memberof": "module:@the-/db.cascadeMix",
    "meta": {
      "filename": "cascadeMix.js",
      "lineno": 12,
      "path": "lib/mixins"
    },
    "name": "CascadeMixed",
    "order": 26,
    "scope": "inner"
  },
  {
    "id": "module:@the-/db.cliMix~CliMixed",
    "kind": "class",
    "longname": "module:@the-/db.cliMix~CliMixed",
    "memberof": "module:@the-/db.cliMix",
    "meta": {
      "filename": "cliMix.js",
      "lineno": 19,
      "path": "lib/mixins"
    },
    "name": "CliMixed",
    "order": 28,
    "scope": "inner"
  },
  {
    "id": "module:@the-/db~ExportImportMixed",
    "kind": "class",
    "longname": "module:@the-/db~ExportImportMixed",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "exportImportMix.js",
      "lineno": 31,
      "path": "lib/mixins"
    },
    "name": "ExportImportMixed",
    "order": 30,
    "scope": "inner"
  },
  {
    "id": "module:@the-/db~MigrateMixed",
    "kind": "class",
    "longname": "module:@the-/db~MigrateMixed",
    "memberof": "module:@the-/db",
    "meta": {
      "filename": "migrateMix.js",
      "lineno": 15,
      "path": "lib/mixins"
    },
    "name": "MigrateMixed",
    "order": 33,
    "scope": "inner"
  },
  {
    "id": "module:@the-/db.refreshMix~RefreshMixed",
    "kind": "class",
    "longname": "module:@the-/db.refreshMix~RefreshMixed",
    "memberof": "module:@the-/db.refreshMix",
    "meta": {
      "filename": "refreshMix.js",
      "lineno": 27,
      "path": "lib/mixins"
    },
    "name": "RefreshMixed",
    "order": 36,
    "scope": "inner"
  },
  {
    "id": "module:@the-/db.resourceMix~ResourceMixed",
    "kind": "class",
    "longname": "module:@the-/db.resourceMix~ResourceMixed",
    "memberof": "module:@the-/db.resourceMix",
    "meta": {
      "filename": "resourceMix.js",
      "lineno": 12,
      "path": "lib/mixins"
    },
    "name": "ResourceMixed",
    "order": 42,
    "scope": "inner"
  }
]
