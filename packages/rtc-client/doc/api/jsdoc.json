[
  {
    "description": "Client for the-rtc",
    "id": "module:@the-/rtc-client",
    "kind": "module",
    "license": "MIT",
    "longname": "module:@the-/rtc-client",
    "meta": {
      "filename": "index.js",
      "lineno": 3,
      "path": "lib"
    },
    "name": "@the-/rtc-client",
    "order": 2,
    "typicalname": "rtcClient",
    "version": "15.18.0"
  },
  {
    "description": "ChannelNames",
    "id": "module:@the-/rtc.constants.module:ChannelNames",
    "kind": "module",
    "longname": "module:@the-/rtc.constants.module:ChannelNames",
    "meta": {
      "filename": "ChannelNames.js",
      "lineno": 5,
      "path": "lib/constants"
    },
    "name": "ChannelNames",
    "order": 12
  },
  {
    "description": "IOEvents",
    "id": "module:@the-/rtc.constants.module:IOEvents",
    "kind": "module",
    "longname": "module:@the-/rtc.constants.module:IOEvents",
    "meta": {
      "filename": "IOEvents.js",
      "lineno": 5,
      "path": "lib/constants"
    },
    "name": "IOEvents",
    "order": 14
  },
  {
    "description": "PeerEvents",
    "id": "module:@the-/rtc.constants.module:PeerEvents",
    "kind": "module",
    "longname": "module:@the-/rtc.constants.module:PeerEvents",
    "meta": {
      "filename": "PeerEvents.js",
      "lineno": 5,
      "path": "lib/constants"
    },
    "name": "PeerEvents",
    "order": 15
  },
  {
    "description": "Audio enabled or not",
    "id": "TheRTCClient#audioEnabled",
    "kind": "member",
    "longname": "TheRTCClient#audioEnabled",
    "memberof": "TheRTCClient",
    "meta": {
      "filename": "TheRTCClient.js",
      "lineno": 66,
      "path": "lib"
    },
    "name": "audioEnabled",
    "order": 4,
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Additional info",
    "id": "TheRTCClient#info",
    "kind": "member",
    "longname": "TheRTCClient#info",
    "memberof": "TheRTCClient",
    "meta": {
      "filename": "TheRTCClient.js",
      "lineno": 74,
      "path": "lib"
    },
    "name": "info",
    "order": 5,
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "scope": "instance"
  },
  {
    "description": "RTC client id",
    "id": "TheRTCClient#rid",
    "kind": "member",
    "longname": "TheRTCClient#rid",
    "memberof": "TheRTCClient",
    "meta": {
      "filename": "TheRTCClient.js",
      "lineno": 82,
      "path": "lib"
    },
    "name": "rid",
    "order": 6,
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Status",
    "id": "TheRTCClient#state",
    "kind": "member",
    "longname": "TheRTCClient#state",
    "memberof": "TheRTCClient",
    "meta": {
      "filename": "TheRTCClient.js",
      "lineno": 90,
      "path": "lib"
    },
    "name": "state",
    "order": 7,
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Video enabled",
    "id": "TheRTCClient#videoEnabled",
    "kind": "member",
    "longname": "TheRTCClient#videoEnabled",
    "memberof": "TheRTCClient",
    "meta": {
      "filename": "TheRTCClient.js",
      "lineno": 105,
      "path": "lib"
    },
    "name": "videoEnabled",
    "order": 8,
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "scope": "instance"
  },
  {
    "async": true,
    "description": "Connect to server",
    "id": "TheRTCClient#connect",
    "kind": "function",
    "longname": "TheRTCClient#connect",
    "memberof": "TheRTCClient",
    "meta": {
      "filename": "TheRTCClient.js",
      "lineno": 242,
      "path": "lib"
    },
    "name": "connect",
    "order": 9,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Server url",
        "name": "url"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "Optional settings",
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<undefined>"
          ]
        }
      }
    ],
    "scope": "instance"
  },
  {
    "async": true,
    "description": "Disconnect from signaling server",
    "id": "TheRTCClient#disconnect",
    "kind": "function",
    "longname": "TheRTCClient#disconnect",
    "memberof": "TheRTCClient",
    "meta": {
      "filename": "TheRTCClient.js",
      "lineno": 286,
      "path": "lib"
    },
    "name": "disconnect",
    "order": 10,
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<undefined>"
          ]
        }
      }
    ],
    "scope": "instance"
  },
  {
    "async": true,
    "description": "Publish topic via pub-sub channel",
    "id": "TheRTCClient#publish",
    "kind": "function",
    "longname": "TheRTCClient#publish",
    "memberof": "TheRTCClient",
    "meta": {
      "filename": "TheRTCClient.js",
      "lineno": 414,
      "path": "lib"
    },
    "name": "publish",
    "order": 11,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Topic name",
        "name": "topic"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Payload data",
        "name": "payload"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<undefined>"
          ]
        }
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Subscribe topic on pub-sub channel",
    "id": "ChannelMixed#subscribePubSubChannel",
    "kind": "function",
    "longname": "ChannelMixed#subscribePubSubChannel",
    "memberof": "ChannelMixed",
    "meta": {
      "filename": "channelMix.js",
      "lineno": 57,
      "path": "lib/mixins"
    },
    "name": "subscribePubSubChannel",
    "order": 19,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "topic"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "callback"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        }
      }
    ],
    "scope": "instance"
  },
  {
    "description": "Unsubscribe topic on pub-sub channel",
    "id": "ChannelMixed#unsubscribePubSubChannel",
    "kind": "function",
    "longname": "ChannelMixed#unsubscribePubSubChannel",
    "memberof": "ChannelMixed",
    "meta": {
      "filename": "channelMix.js",
      "lineno": 75,
      "path": "lib/mixins"
    },
    "name": "unsubscribePubSubChannel",
    "order": 20,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "topic"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "subscription to unbind",
        "name": "subscription"
      }
    ],
    "scope": "instance"
  },
  {
    "id": "module:@the-/rtc-client.TheRTCClient",
    "kind": "class",
    "longname": "module:@the-/rtc-client.TheRTCClient",
    "memberof": "module:@the-/rtc-client",
    "meta": {
      "filename": "TheRTCClient.js",
      "lineno": 26,
      "path": "lib"
    },
    "name": "TheRTCClient",
    "order": 3,
    "scope": "static"
  },
  {
    "description": "Constant variables",
    "id": "module:@the-/rtc.constants",
    "kind": "namespace",
    "longname": "module:@the-/rtc.constants",
    "memberof": "module:@the-/rtc",
    "meta": {
      "filename": "index.js",
      "lineno": 3,
      "path": "lib/constants"
    },
    "name": "constants",
    "order": 13,
    "scope": "static"
  },
  {
    "id": "module:@the-/rtc.constants.PeerPurposes",
    "kind": "namespace",
    "longname": "module:@the-/rtc.constants.PeerPurposes",
    "memberof": "module:@the-/rtc.constants",
    "meta": {
      "filename": "PeerPurposes.js",
      "lineno": 4,
      "path": "lib/constants"
    },
    "name": "PeerPurposes",
    "order": 16,
    "scope": "static"
  },
  {
    "description": "Class mixins",
    "id": "module:@the-/rtc.mixins",
    "kind": "namespace",
    "longname": "module:@the-/rtc.mixins",
    "memberof": "module:@the-/rtc",
    "meta": {
      "filename": "index.js",
      "lineno": 3,
      "path": "lib/mixins"
    },
    "name": "mixins",
    "order": 21,
    "scope": "static"
  },
  {
    "description": "Create a TheRTCClient instance",
    "id": "module:@the-/rtc-client.create",
    "kind": "function",
    "longname": "module:@the-/rtc-client.create",
    "memberof": "module:@the-/rtc-client",
    "meta": {
      "filename": "create.js",
      "lineno": 5,
      "path": "lib"
    },
    "name": "create",
    "order": 0,
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "variable": true,
        "name": "args"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "TheRTCClient"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "Alias of {@link module:@the-/rtc-client.create}",
    "id": "module:@the-/rtc-client.default",
    "kind": "function",
    "longname": "module:@the-/rtc-client.default",
    "memberof": "module:@the-/rtc-client",
    "meta": {
      "filename": "default.js",
      "lineno": 3,
      "path": "lib"
    },
    "name": "default",
    "order": 1,
    "scope": "static"
  },
  {
    "description": "Mixin for assert",
    "id": "module:@the-/rtc.constants.mixins.assertMix",
    "kind": "function",
    "longname": "module:@the-/rtc.constants.mixins.assertMix",
    "memberof": "module:@the-/rtc.constants.mixins",
    "meta": {
      "filename": "assertMix.js",
      "lineno": 3,
      "path": "lib/mixins"
    },
    "name": "assertMix",
    "order": 17,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Mixin for channel",
    "id": "module:@the-/rtc.constants.mixins.channelMix",
    "kind": "function",
    "longname": "module:@the-/rtc.constants.mixins.channelMix",
    "memberof": "module:@the-/rtc.constants.mixins",
    "meta": {
      "filename": "channelMix.js",
      "lineno": 5,
      "path": "lib/mixins"
    },
    "name": "channelMix",
    "order": 18,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Mixin for peer",
    "id": "module:@the-/rtc.constants.mixins.peerMix",
    "kind": "function",
    "longname": "module:@the-/rtc.constants.mixins.peerMix",
    "memberof": "module:@the-/rtc.constants.mixins",
    "meta": {
      "filename": "peerMix.js",
      "lineno": 15,
      "path": "lib/mixins"
    },
    "name": "peerMix",
    "order": 22,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Mixin for promise",
    "id": "module:@the-/rtc.constants.mixins.promiseMix",
    "kind": "function",
    "longname": "module:@the-/rtc.constants.mixins.promiseMix",
    "memberof": "module:@the-/rtc.constants.mixins",
    "meta": {
      "filename": "promiseMix.js",
      "lineno": 3,
      "path": "lib/mixins"
    },
    "name": "promiseMix",
    "order": 23,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Mixin for serialize",
    "id": "module:@the-/rtc.constants.mixins.serializeMix",
    "kind": "function",
    "longname": "module:@the-/rtc.constants.mixins.serializeMix",
    "memberof": "module:@the-/rtc.constants.mixins",
    "meta": {
      "filename": "serializeMix.js",
      "lineno": 7,
      "path": "lib/mixins"
    },
    "name": "serializeMix",
    "order": 24,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Mixin for socket",
    "id": "module:@the-/rtc.constants.mixins.socketMix",
    "kind": "function",
    "longname": "module:@the-/rtc.constants.mixins.socketMix",
    "memberof": "module:@the-/rtc.constants.mixins",
    "meta": {
      "filename": "socketMix.js",
      "lineno": 10,
      "path": "lib/mixins"
    },
    "name": "socketMix",
    "order": 25,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class"
      }
    ],
    "scope": "static"
  }
]
