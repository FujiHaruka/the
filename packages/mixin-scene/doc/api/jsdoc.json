[
  {
    "description": "Mixins for the-scene",
    "id": "module:@the-/mixin-scene",
    "kind": "module",
    "license": "MIT",
    "longname": "module:@the-/mixin-scene",
    "meta": {
      "filename": "index.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "@the-/mixin-scene",
    "order": 2,
    "typicalname": "mixinScene",
    "version": "17.1.2"
  },
  {
    "description": "Get is ready or not",
    "id": "module:@the-/mixin-scene.withReady~WithReadyMixed.isReady",
    "kind": "member",
    "longname": "module:@the-/mixin-scene.withReady~WithReadyMixed.isReady",
    "memberof": "module:@the-/mixin-scene.withReady~WithReadyMixed",
    "meta": {
      "filename": "withReady.js",
      "lineno": 38,
      "path": "lib"
    },
    "name": "isReady",
    "order": 51,
    "properties": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "name": "isReady"
      }
    ],
    "scope": "static"
  },
  {
    "access": "protected",
    "description": "Helper functions",
    "id": "module:@the-/mixin-scene.helpers",
    "kind": "namespace",
    "longname": "module:@the-/mixin-scene.helpers",
    "memberof": "module:@the-/mixin-scene",
    "meta": {
      "filename": "index.js",
      "lineno": 2,
      "path": "lib/helpers"
    },
    "name": "helpers",
    "order": 61,
    "scope": "static"
  },
  {
    "description": "For bindDefaults",
    "id": "module:@the-/mixin-scene.bindDefaults",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.bindDefaults",
    "memberof": "module:@the-/mixin-scene",
    "meta": {
      "filename": "bindDefaults.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "bindDefaults",
    "order": 0,
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "method annotation function"
      }
    ],
    "scope": "static"
  },
  {
    "description": "For bindScope",
    "id": "module:@the-/mixin-scene.bindScope",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.bindScope",
    "memberof": "module:@the-/mixin-scene",
    "meta": {
      "filename": "bindScope.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "bindScope",
    "order": 1,
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class annotation function"
      }
    ],
    "scope": "static"
  },
  {
    "description": "withBusy mixin",
    "id": "module:@the-/mixin-scene.withBusy",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withBusy",
    "memberof": "module:@the-/mixin-scene",
    "meta": {
      "filename": "withBusy.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "withBusy",
    "order": 3,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class to mix",
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Mixed class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Wait busy for",
    "id": "module:@the-/mixin-scene.withBusy.WithBusyMixed.busyFor",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withBusy.WithBusyMixed.busyFor",
    "memberof": "module:@the-/mixin-scene.withBusy.WithBusyMixed",
    "meta": {
      "filename": "withBusy.js",
      "lineno": 30,
      "path": "lib"
    },
    "name": "busyFor",
    "order": 5,
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "duration"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<undefined>"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "Set busy true while task active",
    "id": "module:@the-/mixin-scene.withBusy.WithBusyMixed.busyWhile",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withBusy.WithBusyMixed.busyWhile",
    "memberof": "module:@the-/mixin-scene.withBusy.WithBusyMixed",
    "meta": {
      "filename": "withBusy.js",
      "lineno": 40,
      "path": "lib"
    },
    "name": "busyWhile",
    "order": 6,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "task"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<undefined>"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "Is busy or not",
    "id": "module:@the-/mixin-scene.withBusy.WithBusyMixed.isBusy",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withBusy.WithBusyMixed.isBusy",
    "memberof": "module:@the-/mixin-scene.withBusy.WithBusyMixed",
    "meta": {
      "filename": "withBusy.js",
      "lineno": 52,
      "path": "lib"
    },
    "name": "isBusy",
    "order": 7,
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "Wait while busy",
    "id": "module:@the-/mixin-scene.withBusy.WithBusyMixed.waitWhileBusy",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withBusy.WithBusyMixed.waitWhileBusy",
    "memberof": "module:@the-/mixin-scene.withBusy.WithBusyMixed",
    "meta": {
      "filename": "withBusy.js",
      "lineno": 59,
      "path": "lib"
    },
    "name": "waitWhileBusy",
    "order": 8,
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<undefined>"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "deprecated": true,
    "description": "withEntities mixin",
    "id": "module:@the-/mixin-scene.withEntities",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withEntities",
    "memberof": "module:@the-/mixin-scene",
    "meta": {
      "filename": "withEntities.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "withEntities",
    "order": 9,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class to mix",
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Mixed class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Add entities",
    "id": "module:@the-/mixin-scene.withEntities~WithEntities.addEntities",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withEntities~WithEntities.addEntities",
    "memberof": "module:@the-/mixin-scene.withEntities~WithEntities",
    "meta": {
      "filename": "withEntities.js",
      "lineno": 30,
      "path": "lib"
    },
    "name": "addEntities",
    "order": 11,
    "params": [
      {
        "type": {
          "names": [
            "Array.<Object>"
          ]
        },
        "name": "entities"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "defaultvalue": "{}",
        "description": "Optional settings",
        "name": "options"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Add a entity",
    "id": "module:@the-/mixin-scene.withEntities~WithEntities.addEntity",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withEntities~WithEntities.addEntity",
    "memberof": "module:@the-/mixin-scene.withEntities~WithEntities",
    "meta": {
      "filename": "withEntities.js",
      "lineno": 44,
      "path": "lib"
    },
    "name": "addEntity",
    "order": 12,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "defaultvalue": "{}",
        "description": "Optional settings",
        "name": "options"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Delete entity",
    "id": "module:@the-/mixin-scene.withEntities~WithEntities.deleteEntity",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withEntities~WithEntities.deleteEntity",
    "memberof": "module:@the-/mixin-scene.withEntities~WithEntities",
    "meta": {
      "filename": "withEntities.js",
      "lineno": 51,
      "path": "lib"
    },
    "name": "deleteEntity",
    "order": 13,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "entity"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Get entities",
    "id": "module:@the-/mixin-scene.withEntities~WithEntities.getEntities",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withEntities~WithEntities.getEntities",
    "memberof": "module:@the-/mixin-scene.withEntities~WithEntities",
    "meta": {
      "filename": "withEntities.js",
      "lineno": 61,
      "path": "lib"
    },
    "name": "getEntities",
    "order": 14,
    "returns": [
      {
        "type": {
          "names": [
            "Array.<Object>"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "Receive an entity",
    "id": "module:@the-/mixin-scene.withEntities~WithEntities.receiveEntity",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withEntities~WithEntities.receiveEntity",
    "memberof": "module:@the-/mixin-scene.withEntities~WithEntities",
    "meta": {
      "filename": "withEntities.js",
      "lineno": 77,
      "path": "lib"
    },
    "name": "receiveEntity",
    "order": 15,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Entity to set",
        "name": "entity"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "defaultvalue": "{}",
        "description": "Optional settings",
        "name": "options"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Update existing entity",
    "id": "module:@the-/mixin-scene.withEntities~WithEntities.updateEntity",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withEntities~WithEntities.updateEntity",
    "memberof": "module:@the-/mixin-scene.withEntities~WithEntities",
    "meta": {
      "filename": "withEntities.js",
      "lineno": 90,
      "path": "lib"
    },
    "name": "updateEntity",
    "order": 16,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "entity"
      }
    ],
    "scope": "static"
  },
  {
    "description": "withEntry mixin",
    "id": "module:@the-/mixin-scene.withEntry",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withEntry",
    "memberof": "module:@the-/mixin-scene",
    "meta": {
      "filename": "withEntry.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "withEntry",
    "order": 17,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class to mix",
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Mixed class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Get entry values",
    "id": "module:@the-/mixin-scene.withEntry~WithEntryMixed.getEntry",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withEntry~WithEntryMixed.getEntry",
    "memberof": "module:@the-/mixin-scene.withEntry~WithEntryMixed",
    "meta": {
      "filename": "withEntry.js",
      "lineno": 36,
      "path": "lib"
    },
    "name": "getEntry",
    "order": 19,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "defaultvalue": "{}",
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "id": "module:@the-/mixin-scene.withEntry~WithEntryMixed.hasEntryErrorFor",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withEntry~WithEntryMixed.hasEntryErrorFor",
    "memberof": "module:@the-/mixin-scene.withEntry~WithEntryMixed",
    "meta": {
      "filename": "withEntry.js",
      "lineno": 48,
      "path": "lib"
    },
    "name": "hasEntryErrorFor",
    "order": 20,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "name"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "Process an entry",
    "id": "module:@the-/mixin-scene.withEntry~WithEntryMixed.processEntry",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withEntry~WithEntryMixed.processEntry",
    "memberof": "module:@the-/mixin-scene.withEntry~WithEntryMixed",
    "meta": {
      "filename": "withEntry.js",
      "lineno": 57,
      "path": "lib"
    },
    "name": "processEntry",
    "order": 21,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "handler"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<undefined>"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "Reset entry",
    "id": "module:@the-/mixin-scene.withEntry~WithEntryMixed.resetEntry",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withEntry~WithEntryMixed.resetEntry",
    "memberof": "module:@the-/mixin-scene.withEntry~WithEntryMixed",
    "meta": {
      "filename": "withEntry.js",
      "lineno": 76,
      "path": "lib"
    },
    "name": "resetEntry",
    "order": 22,
    "scope": "static"
  },
  {
    "description": "Set entry values",
    "id": "module:@the-/mixin-scene.withEntry~WithEntryMixed.setEntry",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withEntry~WithEntryMixed.setEntry",
    "memberof": "module:@the-/mixin-scene.withEntry~WithEntryMixed",
    "meta": {
      "filename": "withEntry.js",
      "lineno": 85,
      "path": "lib"
    },
    "name": "setEntry",
    "order": 23,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "newValues"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Set entry errors",
    "id": "module:@the-/mixin-scene.withEntry~WithEntryMixed.setEntryErrors",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withEntry~WithEntryMixed.setEntryErrors",
    "memberof": "module:@the-/mixin-scene.withEntry~WithEntryMixed",
    "meta": {
      "filename": "withEntry.js",
      "lineno": 116,
      "path": "lib"
    },
    "name": "setEntryErrors",
    "order": 24,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "errors"
      }
    ],
    "scope": "static"
  },
  {
    "description": "withFilter mixin",
    "id": "module:@the-/mixin-scene.withFilter",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withFilter",
    "memberof": "module:@the-/mixin-scene",
    "meta": {
      "filename": "withFilter.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "withFilter",
    "order": 25,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class to mix",
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Mixed class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Get filter",
    "id": "module:@the-/mixin-scene.withFilter~WithFilterMixed.getFilter",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withFilter~WithFilterMixed.getFilter",
    "memberof": "module:@the-/mixin-scene.withFilter~WithFilterMixed",
    "meta": {
      "filename": "withFilter.js",
      "lineno": 28,
      "path": "lib"
    },
    "name": "getFilter",
    "order": 27,
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "Set filter",
    "id": "module:@the-/mixin-scene.withFilter~WithFilterMixed.setFilter",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withFilter~WithFilterMixed.setFilter",
    "memberof": "module:@the-/mixin-scene.withFilter~WithFilterMixed",
    "meta": {
      "filename": "withFilter.js",
      "lineno": 35,
      "path": "lib"
    },
    "name": "setFilter",
    "order": 28,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "filter"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Set filters by q",
    "id": "module:@the-/mixin-scene.withFilter~WithFilterMixed.setFilterByQ",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withFilter~WithFilterMixed.setFilterByQ",
    "memberof": "module:@the-/mixin-scene.withFilter~WithFilterMixed",
    "meta": {
      "filename": "withFilter.js",
      "lineno": 39,
      "path": "lib"
    },
    "name": "setFilterByQ",
    "order": 29,
    "scope": "static"
  },
  {
    "description": "withId mixin",
    "id": "module:@the-/mixin-scene.withId",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withId",
    "memberof": "module:@the-/mixin-scene",
    "meta": {
      "filename": "withId.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "withId",
    "order": 30,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class to mix",
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Mixed class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Get id",
    "id": "module:@the-/mixin-scene.withId~WithHistoryMixed.getId",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withId~WithHistoryMixed.getId",
    "memberof": "module:@the-/mixin-scene.withId~WithHistoryMixed",
    "meta": {
      "filename": "withId.js",
      "lineno": 27,
      "path": "lib"
    },
    "name": "getId",
    "order": 32,
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "nullable": true,
        "description": "id"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Check if the id is known",
    "id": "module:@the-/mixin-scene.withId~WithHistoryMixed.isKnownId",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withId~WithHistoryMixed.isKnownId",
    "memberof": "module:@the-/mixin-scene.withId~WithHistoryMixed",
    "meta": {
      "filename": "withId.js",
      "lineno": 35,
      "path": "lib"
    },
    "name": "isKnownId",
    "order": 33,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "id"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "withLimit mixin",
    "id": "module:@the-/mixin-scene.withLimit",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withLimit",
    "memberof": "module:@the-/mixin-scene",
    "meta": {
      "filename": "withLimit.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "withLimit",
    "order": 34,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class to mix",
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Mixed class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Get limit",
    "id": "module:@the-/mixin-scene.withLimit~WithLimitMixed.getLimit",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withLimit~WithLimitMixed.getLimit",
    "memberof": "module:@the-/mixin-scene.withLimit~WithLimitMixed",
    "meta": {
      "filename": "withLimit.js",
      "lineno": 27,
      "path": "lib"
    },
    "name": "getLimit",
    "order": 36,
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "Next limit",
    "id": "module:@the-/mixin-scene.withLimit~WithLimitMixed.nextLimit",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withLimit~WithLimitMixed.nextLimit",
    "memberof": "module:@the-/mixin-scene.withLimit~WithLimitMixed",
    "meta": {
      "filename": "withLimit.js",
      "lineno": 34,
      "path": "lib"
    },
    "name": "nextLimit",
    "order": 37,
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "Set limit",
    "id": "module:@the-/mixin-scene.withLimit~WithLimitMixed.setLimit",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withLimit~WithLimitMixed.setLimit",
    "memberof": "module:@the-/mixin-scene.withLimit~WithLimitMixed",
    "meta": {
      "filename": "withLimit.js",
      "lineno": 41,
      "path": "lib"
    },
    "name": "setLimit",
    "order": 38,
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "name": "limit"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Update to next limit",
    "id": "module:@the-/mixin-scene.withLimit~WithLimitMixed.updateToNextLimit",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withLimit~WithLimitMixed.updateToNextLimit",
    "memberof": "module:@the-/mixin-scene.withLimit~WithLimitMixed",
    "meta": {
      "filename": "withLimit.js",
      "lineno": 47,
      "path": "lib"
    },
    "name": "updateToNextLimit",
    "order": 39,
    "scope": "static"
  },
  {
    "description": "withPage mixin",
    "id": "module:@the-/mixin-scene.withPage",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withPage",
    "memberof": "module:@the-/mixin-scene",
    "meta": {
      "filename": "withPage.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "withPage",
    "order": 40,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class to mix",
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Mixed class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Get page data",
    "id": "module:@the-/mixin-scene.withPage.WithPageMixed.getPage",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withPage.WithPageMixed.getPage",
    "memberof": "module:@the-/mixin-scene.withPage.WithPageMixed",
    "meta": {
      "filename": "withPage.js",
      "lineno": 27,
      "path": "lib"
    },
    "name": "getPage",
    "order": 42,
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "deprecated": true,
    "description": "withQuery mixin",
    "id": "module:@the-/mixin-scene.withQuery",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withQuery",
    "memberof": "module:@the-/mixin-scene",
    "meta": {
      "filename": "withQuery.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "withQuery",
    "order": 43,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class to mix",
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Mixed class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Get query from search",
    "id": "module:@the-/mixin-scene.withQuery~WithQueryMixed.getQueryFromSearch",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withQuery~WithQueryMixed.getQueryFromSearch",
    "memberof": "module:@the-/mixin-scene.withQuery~WithQueryMixed",
    "meta": {
      "filename": "withQuery.js",
      "lineno": 33,
      "path": "lib"
    },
    "name": "getQueryFromSearch",
    "order": 45,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "location.search",
        "name": "search"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "Merge additional query into search",
    "id": "module:@the-/mixin-scene.withQuery~WithQueryMixed.mergeQueryToSearch",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withQuery~WithQueryMixed.mergeQueryToSearch",
    "memberof": "module:@the-/mixin-scene.withQuery~WithQueryMixed",
    "meta": {
      "filename": "withQuery.js",
      "lineno": 43,
      "path": "lib"
    },
    "name": "mergeQueryToSearch",
    "order": 46,
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "query"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Query with search",
    "id": "module:@the-/mixin-scene.withQuery~WithQueryMixed.queryWithSearch",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withQuery~WithQueryMixed.queryWithSearch",
    "memberof": "module:@the-/mixin-scene.withQuery~WithQueryMixed",
    "meta": {
      "filename": "withQuery.js",
      "lineno": 72,
      "path": "lib"
    },
    "name": "queryWithSearch",
    "order": 47,
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Location search string",
        "name": "search"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "withReady mixin",
    "id": "module:@the-/mixin-scene.withReady",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withReady",
    "memberof": "module:@the-/mixin-scene",
    "meta": {
      "filename": "withReady.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "withReady",
    "order": 48,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class to mix",
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Mixed class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Do only if ready",
    "id": "module:@the-/mixin-scene.withReady~WithReadyMixed.ifReady",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withReady~WithReadyMixed.ifReady",
    "memberof": "module:@the-/mixin-scene.withReady~WithReadyMixed",
    "meta": {
      "filename": "withReady.js",
      "lineno": 29,
      "path": "lib"
    },
    "name": "ifReady",
    "order": 50,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "task"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<*>"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "Set ready when done",
    "id": "module:@the-/mixin-scene.withReady~WithReadyMixed.readyWhen",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withReady~WithReadyMixed.readyWhen",
    "memberof": "module:@the-/mixin-scene.withReady~WithReadyMixed",
    "meta": {
      "filename": "withReady.js",
      "lineno": 48,
      "path": "lib"
    },
    "name": "readyWhen",
    "order": 52,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "task"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<*>"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "Do unless ready",
    "id": "module:@the-/mixin-scene.withReady~WithReadyMixed.unlessReady",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withReady~WithReadyMixed.unlessReady",
    "memberof": "module:@the-/mixin-scene.withReady~WithReadyMixed",
    "meta": {
      "filename": "withReady.js",
      "lineno": 60,
      "path": "lib"
    },
    "name": "unlessReady",
    "order": 53,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "task"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<*>"
          ]
        }
      }
    ],
    "scope": "static"
  },
  {
    "description": "withResult mixin",
    "id": "module:@the-/mixin-scene.withResult",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withResult",
    "memberof": "module:@the-/mixin-scene",
    "meta": {
      "filename": "withResult.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "withResult",
    "order": 54,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class to mix",
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Mixed class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Do action and store result",
    "id": "module:@the-/mixin-scene.withResult~WithResultMixed.resultFor",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withResult~WithResultMixed.resultFor",
    "memberof": "module:@the-/mixin-scene.withResult~WithResultMixed",
    "meta": {
      "filename": "withResult.js",
      "lineno": 29,
      "path": "lib"
    },
    "name": "resultFor",
    "order": 56,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "action"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<*>"
          ]
        },
        "description": "- Action result"
      }
    ],
    "scope": "static"
  },
  {
    "description": "withSort mixin",
    "id": "module:@the-/mixin-scene.withSort",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.withSort",
    "memberof": "module:@the-/mixin-scene",
    "meta": {
      "filename": "withSort.js",
      "lineno": 2,
      "path": "lib"
    },
    "name": "withSort",
    "order": 57,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Class to mix",
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Mixed class"
      }
    ],
    "scope": "static"
  },
  {
    "description": "Define as class mixin",
    "id": "module:@the-/mixin-scene.helpers.asClassMixin",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.helpers.asClassMixin",
    "memberof": "module:@the-/mixin-scene.helpers",
    "meta": {
      "filename": "asClassMixin.js",
      "lineno": 2,
      "path": "lib/helpers"
    },
    "name": "asClassMixin",
    "order": 59,
    "scope": "static"
  },
  {
    "description": "Define method wrapper",
    "id": "module:@the-/mixin-scene.helpers.asMethodWrap",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.helpers.asMethodWrap",
    "memberof": "module:@the-/mixin-scene.helpers",
    "meta": {
      "filename": "asMethodWrap.js",
      "lineno": 2,
      "path": "lib/helpers"
    },
    "name": "asMethodWrap",
    "order": 60,
    "scope": "static"
  },
  {
    "id": "module:@the-/mixin-scene.helpers.injectProperties",
    "kind": "function",
    "longname": "module:@the-/mixin-scene.helpers.injectProperties",
    "memberof": "module:@the-/mixin-scene.helpers",
    "meta": {
      "filename": "injectProperties.js",
      "lineno": 2,
      "path": "lib/helpers"
    },
    "name": "injectProperties",
    "order": 62,
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "name": "Class"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "Injected Class"
      }
    ],
    "scope": "static"
  },
  {
    "id": "module:@the-/mixin-scene.withBusy~WithBusyMixed",
    "kind": "class",
    "longname": "module:@the-/mixin-scene.withBusy~WithBusyMixed",
    "memberof": "module:@the-/mixin-scene.withBusy",
    "meta": {
      "filename": "withBusy.js",
      "lineno": 9,
      "path": "lib"
    },
    "name": "WithBusyMixed",
    "order": 4,
    "scope": "inner"
  },
  {
    "id": "module:@the-/mixin-scene.withEntities~WithEntities",
    "kind": "class",
    "longname": "module:@the-/mixin-scene.withEntities~WithEntities",
    "memberof": "module:@the-/mixin-scene.withEntities",
    "meta": {
      "filename": "withEntities.js",
      "lineno": 10,
      "path": "lib"
    },
    "name": "WithEntities",
    "order": 10,
    "scope": "inner"
  },
  {
    "id": "module:@the-/mixin-scene.withEntry~WithEntryMixed",
    "kind": "class",
    "longname": "module:@the-/mixin-scene.withEntry~WithEntryMixed",
    "memberof": "module:@the-/mixin-scene.withEntry",
    "meta": {
      "filename": "withEntry.js",
      "lineno": 9,
      "path": "lib"
    },
    "name": "WithEntryMixed",
    "order": 18,
    "scope": "inner"
  },
  {
    "id": "module:@the-/mixin-scene.withFilter~WithFilterMixed",
    "kind": "class",
    "longname": "module:@the-/mixin-scene.withFilter~WithFilterMixed",
    "memberof": "module:@the-/mixin-scene.withFilter",
    "meta": {
      "filename": "withFilter.js",
      "lineno": 9,
      "path": "lib"
    },
    "name": "WithFilterMixed",
    "order": 26,
    "scope": "inner"
  },
  {
    "id": "module:@the-/mixin-scene.withId~WithHistoryMixed",
    "kind": "class",
    "longname": "module:@the-/mixin-scene.withId~WithHistoryMixed",
    "memberof": "module:@the-/mixin-scene.withId",
    "meta": {
      "filename": "withId.js",
      "lineno": 9,
      "path": "lib"
    },
    "name": "WithHistoryMixed",
    "order": 31,
    "scope": "inner"
  },
  {
    "id": "module:@the-/mixin-scene.withLimit~WithLimitMixed",
    "kind": "class",
    "longname": "module:@the-/mixin-scene.withLimit~WithLimitMixed",
    "memberof": "module:@the-/mixin-scene.withLimit",
    "meta": {
      "filename": "withLimit.js",
      "lineno": 9,
      "path": "lib"
    },
    "name": "WithLimitMixed",
    "order": 35,
    "scope": "inner"
  },
  {
    "id": "module:@the-/mixin-scene.withPage~WithPageMixed",
    "kind": "class",
    "longname": "module:@the-/mixin-scene.withPage~WithPageMixed",
    "memberof": "module:@the-/mixin-scene.withPage",
    "meta": {
      "filename": "withPage.js",
      "lineno": 9,
      "path": "lib"
    },
    "name": "WithPageMixed",
    "order": 41,
    "scope": "inner"
  },
  {
    "id": "module:@the-/mixin-scene.withQuery~WithQueryMixed",
    "kind": "class",
    "longname": "module:@the-/mixin-scene.withQuery~WithQueryMixed",
    "memberof": "module:@the-/mixin-scene.withQuery",
    "meta": {
      "filename": "withQuery.js",
      "lineno": 11,
      "path": "lib"
    },
    "name": "WithQueryMixed",
    "order": 44,
    "scope": "inner"
  },
  {
    "id": "module:@the-/mixin-scene.withReady~WithReadyMixed",
    "kind": "class",
    "longname": "module:@the-/mixin-scene.withReady~WithReadyMixed",
    "memberof": "module:@the-/mixin-scene.withReady",
    "meta": {
      "filename": "withReady.js",
      "lineno": 9,
      "path": "lib"
    },
    "name": "WithReadyMixed",
    "order": 49,
    "scope": "inner"
  },
  {
    "id": "module:@the-/mixin-scene.withResult~WithResultMixed",
    "kind": "class",
    "longname": "module:@the-/mixin-scene.withResult~WithResultMixed",
    "memberof": "module:@the-/mixin-scene.withResult",
    "meta": {
      "filename": "withResult.js",
      "lineno": 9,
      "path": "lib"
    },
    "name": "WithResultMixed",
    "order": 55,
    "scope": "inner"
  },
  {
    "id": "module:@the-/mixin-scene.withSort~WithSortMixed",
    "kind": "class",
    "longname": "module:@the-/mixin-scene.withSort~WithSortMixed",
    "memberof": "module:@the-/mixin-scene.withSort",
    "meta": {
      "filename": "withSort.js",
      "lineno": 9,
      "path": "lib"
    },
    "name": "WithSortMixed",
    "order": 58,
    "scope": "inner"
  }
]
